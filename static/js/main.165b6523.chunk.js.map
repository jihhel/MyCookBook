{"version":3,"sources":["Types/Recipe.ts","Utils/functions.ts","Types/Ingredient.ts","Components/UIComponents/EButton/EButton.tsx","Components/RecipeRow/RecipeRow.tsx","Utils/SearchableString.ts","Types/Months.ts","API/HomeAPI.js","Screens/Library/LibraryScreen.tsx","Utils/Patterns.ts","Types/Menu.ts","Screens/Menu/MenuScreen.tsx","App.tsx","index.tsx"],"names":["Recipe","name","ingredients","url","this","p","console","log","list","predicate","ingredientsMatch","i","matchesPattern","filter","length","includes","bind","map","value","join","Ingredient","seasonality","m","isAvailableIn","EButton","props","className","text","onClick","RecipeRow","recipe","printIngredients","window","open","SearchableString","lower","toLowerCase","Months","January","February","March","April","May","June","July","August","September","October","November","December","wholeYear","backend","getMarmitonRecipes","search","a","queryParam","fetch","headers","then","response","json","rawRecipes","ingredient","LibraryScreen","flour","recipeTitle","defaultRecipes","useState","filteredRecipes","setFilteredRecipes","textSearch","setTextSearch","HomeAPI","updateDisplayedRecipes","marmitonRecipes","newFilteredRecipes","recipes","patterns","split","s","trim","matchesPatterns","filterRecipes","concat","type","onChange","e","target","color","toString","Menu","date","MenuScreen","menus","setMenus","utils","getToday","menuDay","setMenuDay","menuContent","setMenuContent","useEffect","localStorage","getItem","savedMenus","JSON","parse","stringify","setItem","menu","push","App","render","location","history","Fragment","onSelect","selected","to","pathname","Toggle","Nav","defaultSelected","eventKey","style","fontSize","path","exact","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.165b6523.chunk.js","sourcesContent":["import {exists, forall} from '../Utils/functions'\n\nimport {Pattern, parsePatterns} from '../Utils/Patterns'\nimport SearchableString from '../Utils/SearchableString';\nimport Ingredient from './Ingredient';\n\n/*\nconst {\n    chickpea, \n    coconutMilk, \n    lentils, \n    tomato, \n    leek,\n    turnip,\n    carrot,\n    celeryBranch,\n    parisMushroom,\n    onion,\n    garlic,\n    soySauce,\n} = Ingredients;\n\nconst chickpeaCurry = Recipe(\n  SearchableString(\"Curry de pois-chiches\"),\n  [chickpea, coconutMilk],\n  \"https://www.youtube.com/watch?v=aP6eXpwIths\"\n);\nconst veganBolognese = Recipe(\n  SearchableString(\"Bolognaise Végan\"),\n  [lentils, tomato],\n  \"https://www.marmiton.org/recettes/recette_bolognaise-aux-lentilles_27842.aspx\"\n);\nconst veganParmentier = Recipe(\n    SearchableString(\"Hachis parmentier végan\"),\n    [tomato, leek, turnip, carrot, celeryBranch, parisMushroom, onion, garlic, soySauce],\n    \"https://www.marmiton.org/recettes/recette_hachis-parmentier-vegetarien_14594.aspx\"\n);\nconst allRecipes: Recipe[] = [chickpeaCurry, veganBolognese, veganParmentier];\n*/\n\nclass Recipe {\n    name: SearchableString;\n    ingredients: Ingredient[];\n    url: string;\n\n    constructor(name: SearchableString, ingredients: Ingredient[], url: string) {\n        this.name = name;\n        this.ingredients = ingredients;\n        this.url = url;\n    }\n\n    matchesPattern(p: Pattern): boolean {\n        const ingredientMatches = (i: Ingredient) => i.matchesPattern(p);\n\n        console.log('recipe', this);\n        const ingredientsMatch = exists(this.ingredients, ingredientMatches);\n\n        return this.name.includes(p) || ingredientsMatch;\n    }\n\n    matchesPatterns(p: Pattern[]): boolean {\n        return forall(p, this.matchesPattern.bind(this));\n    }\n\n    printIngredients(): string {\n        return this.ingredients.map(i => i.name.value).join(', ');\n    }\n}\n\nexport { Recipe };\n\nexport function filterRecipes(recipes: Recipe[], search: string): Recipe[] {\n    const patterns: Pattern[] = parsePatterns(search);\n    const filtered = recipes.filter((recipe) => recipe.matchesPatterns(patterns));\n\n    return filtered;\n}\n/*\nexport function useFilteredRecipes(): [Recipe[], ((string) => void)] {\n    const [filteredRecipes, setFilteredRecipes] = useState(allRecipes);\n\n    const filterRecipes: void = (text: string) => {\n        const patterns: Pattern[] = parsePatterns(text);\n        const filtered = allRecipes.filter((recipe) => recipe.matchesPatterns(patterns));\n        setFilteredRecipes(filtered);\n    }\n\n    return [filteredRecipes, filterRecipes];\n}*/\n","export function forall(list: any[], predicate: (a: any) => boolean): boolean {\n    return list.filter(predicate).length === list.length;\n}\n\nexport function exists(list: any[], predicate: (a: any) => boolean): boolean {\n    return list.filter(predicate).length !== 0;\n}","import {Month} from './Months';\nimport {Pattern} from '../Utils/Patterns'\nimport SearchableString from '../Utils/SearchableString';\n\nexport default class Ingredient {\n    name: SearchableString;\n    seasonality: Month[];\n\n    constructor(name: SearchableString, seasonality: Month[]) {\n        this.name = name;\n        this.seasonality = seasonality;\n    }\n\n    isAvailableIn(p: Pattern): boolean {\n        return this.seasonality.filter(m => m.name.includes(p)).length !== 0;\n    }\n\n    matchesPattern(p: Pattern): boolean {\n        return this.name.includes(p) || this.isAvailableIn(p);\n    }\n}\n/*\nexport default {\n    Ingredient: Ingredient,\n    coconutMilk: Ingredient(SearchableString(\"Lait de Coco\"), Months.wholeYear),\n    lentils: Ingredient(SearchableString(\"Lentilles\"), Months.wholeYear),\n    tomato: Ingredient(SearchableString(\"Tomates\"), Months.range(Months.June, Months.September)),\n    chickpea: Ingredient(SearchableString(\"Pois-Chiches\"), Months.wholeYear),\n    leek: Ingredient(SearchableString(\"Poireaux\"), Months.range(Months.September, Months.April)),\n    turnip: Ingredient(SearchableString(\"Navets\"), Months.range(Months.October, Months.May)),\n    carrot: Ingredient(SearchableString(\"Carottes\"), Months.range(Months.September, Months.March)),\n    celeryBranch: Ingredient(SearchableString(\"Branches de céleri\"), Months.range(Months.October, Months.March)),\n    parisMushroom: Ingredient(SearchableString(\"Champignons de Paris\"), Months.wholeYear),\n    onion: Ingredient(SearchableString(\"Oignons\"), Months.range(Months.September, Months.April)),\n    garlic: Ingredient(SearchableString(\"Gousse d'ail\"), Months.range(Months.July, Months.December)),\n    soySauce: Ingredient(SearchableString(\"Sauce Soja\"), Months.wholeYear)\n};*/","import React from 'react';\nimport './EButton.css';\n\ntype Props = {\n    text: string\n    className: string\n    onClick: () => any\n}\n\nexport function EButton(props: Props) {\n\n    const {className, text, onClick} = props;\n\n    return (\n        <button className={`default-button ${className}`} onClick={onClick}>\n            {text}\n        </button>\n    );\n} ","import React from 'react';\nimport './RecipeRow.css';\n\nimport {EButton} from '../UIComponents/EButton/EButton';\n\nimport { Recipe } from '../../Types/Recipe';\n\nexport function RecipeRow(recipe: Recipe) {\n    return (\n        <div className='row'>\n            <div className='details'>\n                <span className='title'>{recipe.name.value}</span>\n                <div>\n                    <span> Ingrédients : {recipe.printIngredients()}.</span>\n                </div>\n            </div>\n            <EButton className='button' text={'VOIR LA RECETTE'} onClick={() => window.open(recipe.url, \"_blank\")}/>\n        </div>\n    );\n}","import {Pattern} from './Patterns';\n\nexport default class SearchableString {\n    value: string;\n    lower: string;\n\n    constructor(value: string) {\n        this.value = value;\n        this.lower = value.toLowerCase();\n    }\n\n    includes(p: Pattern): boolean {\n        return this.lower.includes(p);\n    }\n}","export class Month {\n    name: string;\n    value: number;\n\n    constructor(name: string, value: number) {\n        this.name = name;\n        this.value = value;\n    }\n}\nconst Months = {\n  January: {name: \"janvier\", value: 1},\n  February: {name: \"février\", value: 2},\n  March: {name: \"mars\", value: 3},\n  April: {name: \"avril\", value: 4},\n  May: {name: \"mai\", value: 5},\n  June: {name: \"juin\", value: 6},\n  July: {name: \"juillet\", value: 7},\n  August: {name: \"août\", value: 8},\n  September: {name: \"septembre\", value: 9},\n  October: {name: \"octobre\", value: 10},\n  November: {name: \"novembre\", value: 11},\n  December: {name: \"décembre\", value: 12},\n};\n\nexport const wholeYear = [\n    Months.January, \n    Months.February, \n    Months.March, \n    Months.April, \n    Months.May, \n    Months.June, \n    Months.July, \n    Months.August, \n    Months.September, \n    Months.October, \n    Months.November, \n    Months.December\n];\n\nexport function range(begin: Month, end: Month): Month[] {\n    if (begin === end) return [begin];\n    if (begin <= end) {\n        return wholeYear.filter(m => m.value >= begin.value && m.value <= end.value);    \n    }\n    return wholeYear.filter(m => m >= end || m <= begin);\n}\n","\nimport Ingredient from '../Types/Ingredient';\nimport {Recipe} from '../Types/Recipe';\nimport * as Months from '../Types/Months';\n\nimport SearchableString from '../Utils/SearchableString';\n\n// const backend = \"https://my-cook-book-backend.herokuapp.com\"\nconst backend = \"http://localhost:8080\"\n\nexport async function getMarmitonRecipes(search) {\n    const queryParam = search ? `?aqt=${search}` : '';\n\n    return fetch(`${backend}/marmiton${queryParam}`, {\n        headers: {\n            'access-control-allow-origin': backend\n        }\n    }).then((response) => {\n        return response.json();\n    }).then((rawRecipes) => {\n        return rawRecipes.map((recipe) => {\n            const ingredients = recipe.ingredients.map((ingredient) => {\n                return new Ingredient(new SearchableString(ingredient), Months.wholeYear);\n            });\n\n            return new Recipe(new SearchableString(recipe.name), ingredients, recipe.url);\n        });\n    });\n}\n\n/* export function getLocalRecipes() {\n    const rawRecipes = localRecipes.recipes;\n    \n    return rawRecipes.map((recipe) => {\n        const ingredients = recipe.ingredients.map((ingredient) => {\n            return Ingredient(SearchableString(ingredient.name.value), ingredient.seasonality);\n        })\n\n        return Recipe(SearchableString(recipe.name.value), ingredients, recipe.url);\n    });\n}*/","import './LibraryScreen.css';\nimport React, {useState} from 'react';\n\nimport { Recipe } from '../../Types/Recipe';\nimport Ingredient from '../../Types/Ingredient';\n\nimport { RecipeRow } from '../../Components/RecipeRow/RecipeRow';\nimport SearchableString from '../../Utils/SearchableString';\nimport {filterRecipes} from \"../../Types/Recipe\";\n\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css';\nimport * as HomeAPI from '../../API/HomeAPI';\n\nexport default function LibraryScreen() {\n\n    const flour = new Ingredient(new SearchableString('Farine'), []);\n    const recipeTitle = new SearchableString('Béchamel végétale');\n    const recipe = new Recipe(recipeTitle, [flour], 'http://marmiton.fr');\n\n    const defaultRecipes: Recipe[] = [recipe];\n\n    const [filteredRecipes, setFilteredRecipes] = useState(defaultRecipes);\n    const [textSearch, setTextSearch] = useState(\"\");\n\n    async function updateMarmitonRecipes() {\n        const marmitonRecipes = await HomeAPI.getMarmitonRecipes(textSearch);\n        updateDisplayedRecipes(marmitonRecipes);\n    }\n\n    function updateDisplayedRecipes(marmitonRecipes: Recipe[]) {\n        const newFilteredRecipes = filterRecipes(defaultRecipes, textSearch);\n        setFilteredRecipes(newFilteredRecipes.concat(marmitonRecipes));\n    }\n\n    return (\n        <div className=\"mainContainer\">\n            <div className=\"desktopCentralColumn\">\n                <header className=\"header\">\n                    <span className=\"mainTitle\">\n                        Bibliothèque de recettes 🥞\n                    </span>\n                </header>\n                <div className=\"researchContainer\">\n                <span className=\"researchLabel\">Chercher une recette</span>\n                <div className=\"searchBar\">\n                    <input type=\"text\" className=\"searchInput\" onChange={e => setTextSearch(e.target.value)} value={textSearch}/>\n                    <button className=\"searchButton\" onClick={updateMarmitonRecipes} color='#FFF'>CHERCHER !</button>\n                </div>\n                </div>\n                <div className=\"searchResults\">\n                {filteredRecipes.map((recipe) => <div key={recipe.name.toString()}>{RecipeRow(recipe)}</div>)}\n                </div>\n            </div>\n        </div>\n    );\n\n}","export type Pattern = string;\n\nexport function parsePatterns(str: string): Pattern[] {\n    return str.split(\" \").map(s => s.trim()).filter(s => s.length > 0);\n};","import { Recipe } from './Recipe';\nimport { DayValue } from 'react-modern-calendar-datepicker'\n\n\nexport default class Menu {\n    date: DayValue;\n    recipe: Recipe | string;\n\n    constructor(date: DayValue, recipe: Recipe | string) {\n        this.date = date;\n        this.recipe = recipe;\n    }\n}","import React, {useState, useEffect} from 'react';\nimport './MenuScreen.css';\n\nimport Menu from '../../Types/Menu';\n\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css';\nimport DatePicker, {DayValue, utils} from 'react-modern-calendar-datepicker'\n\nexport default function MenuScreen() {\n\n  const [menus, setMenus] = useState<Menu[]>([]);\n  const [menuDay, setMenuDay] = useState<DayValue>(utils(\"en\").getToday());\n  const [menuContent, setMenuContent] = useState(\"\");\n\n  // Load menus on page load\n  useEffect(() => {\n    const json = localStorage.getItem(\"menus\");\n\n    if (!json) return;\n\n    const savedMenus = JSON.parse(json);\n\n    if (!!savedMenus) {\n      setMenus(savedMenus);\n    }\n  }, [])\n\n  // Save menus when modified\n  useEffect(() => {\n    const json = JSON.stringify(menus);\n    localStorage.setItem(\"menus\", json);\n  }, [menus])\n\n  function printMenus() {\n    if (menus.length === 0) {\n      return (\n        <span>Aucun menu créé pour le moment !</span>\n      );\n    } else {\n      return (\n        <div className=\"menus\">\n          {menus.map(menu => {\n            console.log(\"menu\", menu);\n            return (\n              <div className=\"menu\" key={menu.recipe.toString()}>\n                {/* <span>Date : {menu.date}</span>*/}\n                <span>Recette : {menu.recipe}</span>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  }\n\n  function createMenu() {\n    const menu = new Menu(menuDay, menuContent);\n    menus.push(menu)\n    setMenus(menus);\n  }\n\n  return (\n    <div className=\"mainContainer\">\n      <div className=\"desktopCentralColumn\">\n        <header className=\"header\">\n          <span className=\"mainTitle\">\n            On fait son menu\n          </span>\n        </header>\n        <div className=\"addMenu\">\n          <DatePicker value={menuDay} onChange={date => setMenuDay(date)} />\n          <input type=\"text\" className=\"menuInput\" onChange={e => setMenuContent(e.target.value)} value={menuContent}/>\n          <button className=\"createMenuButton\" onClick={createMenu}>Créer</button>\n        </div>\n        {printMenus()}\n      </div>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\n\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nimport LibraryScreen from './Screens/Library/LibraryScreen';\nimport MenuScreen from './Screens/Menu/MenuScreen';\n\nfunction App() {\n\n  return (\n    <Router>\n      <Route render={({ location, history }) => (\n          <React.Fragment>\n              <SideNav\n                  onSelect={(selected: any) => {\n                      const to = '/' + selected;\n                      if (location.pathname !== to) {\n                          history.push(to);\n                      }\n                  }}\n              >\n                  <SideNav.Toggle />\n                  <SideNav.Nav defaultSelected=\"home\">\n                      <NavItem eventKey=\"library\">\n                          <NavIcon>\n                              <i className=\"fas fa-book-open\" style={{ fontSize: '1.75em' }} />\n                          </NavIcon>\n                          <NavText>\n                              Recettes\n                          </NavText>\n                      </NavItem>\n                      <NavItem eventKey=\"menu\">\n                          <NavIcon>\n                              <i className=\"far fa-calendar-alt\" style={{ fontSize: '1.75em' }} />\n                          </NavIcon>\n                          <NavText>\n                              Faire son menu\n                          </NavText>\n                      </NavItem>\n                  </SideNav.Nav>\n              </SideNav>\n              <main>\n                  <Route path=\"/\" exact component={(props: any) => <LibraryScreen />} />\n                  <Route path=\"/library\" component={(props: any) => <LibraryScreen />} />\n                  <Route path=\"/menu\" component={(props: any) => <MenuScreen />} />\n              </main>\n          </React.Fragment>\n      )}\n      />\n  </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}